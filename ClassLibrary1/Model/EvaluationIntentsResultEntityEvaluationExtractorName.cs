/* 
 * Rasa - Server Endpoints
 *
 * The Rasa server provides endpoints to retrieve trackers of conversations as well as endpoints to modify them. Additionally, endpoints for training and testing models are provided.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ApiClient.Client.OpenAPIDateConverter;

namespace ApiClient.Model
{
    /// <summary>
    /// Entity evaluation result for entity extractor
    /// </summary>
    [DataContract]
    public partial class EvaluationIntentsResultEntityEvaluationExtractorName : IEquatable<EvaluationIntentsResultEntityEvaluationExtractorName>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EvaluationIntentsResultEntityEvaluationExtractorName" /> class.
        /// </summary>
        /// <param name="report">report.</param>
        /// <param name="precision">precision.</param>
        /// <param name="f1Score">f1Score.</param>
        /// <param name="accuracy">accuracy.</param>
        public EvaluationIntentsResultEntityEvaluationExtractorName(string report = default(string), decimal precision = default(decimal), decimal f1Score = default(decimal), decimal accuracy = default(decimal))
        {
            this.Report = report;
            this.Precision = precision;
            this.F1Score = f1Score;
            this.Accuracy = accuracy;
        }

        /// <summary>
        /// Gets or Sets Report
        /// </summary>
        [DataMember(Name = "report", EmitDefaultValue = false)]
        public string Report { get; set; }

        /// <summary>
        /// Gets or Sets Precision
        /// </summary>
        [DataMember(Name = "precision", EmitDefaultValue = false)]
        public decimal Precision { get; set; }

        /// <summary>
        /// Gets or Sets F1Score
        /// </summary>
        [DataMember(Name = "f1_score", EmitDefaultValue = false)]
        public decimal F1Score { get; set; }

        /// <summary>
        /// Gets or Sets Accuracy
        /// </summary>
        [DataMember(Name = "accuracy", EmitDefaultValue = false)]
        public decimal Accuracy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EvaluationIntentsResultEntityEvaluationExtractorName {\n");
            sb.Append("  Report: ").Append(Report).Append("\n");
            sb.Append("  Precision: ").Append(Precision).Append("\n");
            sb.Append("  F1Score: ").Append(F1Score).Append("\n");
            sb.Append("  Accuracy: ").Append(Accuracy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EvaluationIntentsResultEntityEvaluationExtractorName);
        }

        /// <summary>
        /// Returns true if EvaluationIntentsResultEntityEvaluationExtractorName instances are equal
        /// </summary>
        /// <param name="input">Instance of EvaluationIntentsResultEntityEvaluationExtractorName to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EvaluationIntentsResultEntityEvaluationExtractorName input)
        {
            if (input == null)
                return false;

            return
                (
                    this.Report == input.Report ||
                    (this.Report != null &&
                    this.Report.Equals(input.Report))
                ) &&
                (
                    this.Precision == input.Precision ||
                    this.Precision.Equals(input.Precision)
                ) &&
                (
                    this.F1Score == input.F1Score ||
                    this.F1Score.Equals(input.F1Score)
                ) &&
                (
                    this.Accuracy == input.Accuracy ||
                    this.Accuracy.Equals(input.Accuracy)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Report != null)
                    hashCode = hashCode * 59 + this.Report.GetHashCode();
                hashCode = hashCode * 59 + this.Precision.GetHashCode();
                hashCode = hashCode * 59 + this.F1Score.GetHashCode();
                hashCode = hashCode * 59 + this.Accuracy.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
